.DS_Store
build
*.logs

### sublime ###
# sublime
*.sublime-project
*.sublime-workspace

### python ###
**/venv/*
.venv/
.venv/*
**/__pycache__/*

### VisualStudioCode ###
.vscode/*
# !.vscode/settings.json
# !.vscode/tasks.json
# !.vscode/launch.json
# !.vscode/extensions.json
*.code-workspace
settings.json

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
.nb-gradle-properties


### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache
bin/
!**/src/main/**/bin/
!**/src/test/**/bin/
.eclipse

### Intellij ###
.idea/
*.iml
*.iws
*.iml
*.ipr
out/
!**/src/main/**/out/
!**/src/test/**/out/
atlassian-ide-plugin.xml
.jpb


### Maven ###
target/
*.class
*.jar
*.war
*.ear

### Gradle ###
.gradle
.gradle/
dist
out
bin
.vagrant

## terroform  Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
.terraform/*

